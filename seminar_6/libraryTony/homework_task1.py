# Добавьте в модуль с загадками функцию, которая хранит словарь списков. 
# Ключ словаря - загадка, значение - список с отгадками. 
# Функция в цикле вызывает загадывающую функцию, чтобы передать ей все свои загадки.

"""Модуль содержит в себе игру "Угадай загадку".
"""


__all__ = ['guess_riddles']


def riddles_dict() -> tuple:
    """Метод содержит в себе словарь, где в качестве ключа - загадки, в качестве значений - список возможных ответов
    """
    return {'Вот иголки и булавки\nВыползают из-под лавки,\nНа меня они глядят,\nМолока они хотят.': ['ёж', 'ёжик', 'еж', 'ежик'], 
            'Он с жадностью пьет\n— А не чувствует жажды.\nОн бел —\nА купается только однажды:\n' \
            'Он смело ныряет\nВ кипящую воду\nСебе на беду,\nНо на радость народу...\nИ добрые люди\n' \
            'Не скажут:\n— Как жалко...\nА скажут:\n— Как сладко!': ['кусок сахара', 'сахар', 'рафинад'],
            'Твой хвостик я в руке держал,\nТы полетел, я побежал.': ['шарик воздушный', 'шар', 'шарик', 'воздушный шарик', 'воздушный шар']}
        
def guess_riddles(num_of_attempts: int) -> None:
    """Метод содержит в себе игру "Угадай загадку".

    При отгадывании или неугадывании загадки предлагается продолжить отгадывать следующие загадки или выйти из игры.

    Для отгадывания загадки дается количество попыток, определенное входным параметром num_of_attempts.
    """
    riddles = riddles_dict()  # считывание словаря
    num_riddles = 0  # для подсчета количества выведенных загадок
    guessed = False  # загадка отгадана или нет
    want = True  # пользователь хочет продолжить отгадывать следующие загадки или выйти из игры
    while(want):
        for riddle in riddles.keys():
            print(riddle)
            num_riddles += 1
            for count in range(num_of_attempts):
                user_answer = input('\nВведите ответ:\n').lower()
                if user_answer in riddles[riddle]:
                    print(f'Вы отгадали загадку с {count + 1} попытки! Поздравляем!\n')
                    guessed = True
                    break
                if user_answer not in riddles[riddle] and count != num_of_attempts - 1:
                    print(f'Ответ неверный! Попробуйте еще.')
            if guessed == False and num_riddles != len(riddles):
                print(f'\nУвы! Но вы не отгадали загадку за {num_of_attempts} попыток.\n')
            if num_riddles == len(riddles):
                print(f'Загадки закончились')
                want = False
            else:
                print('Введите "+", если хотите следующую загадку, "-" - для выхода.\n')
                choise = input()
                while(choise not in ['+', '-']):
                        choise = input('Вы ввели неверный символ.\nВведите "+", если хотите следующую загадку, "-" - для выхода.\n')
                if choise == '+':
                    continue
                else:
                    want = False
                    break


    

if __name__ == '__main__':
    num_of_attempts = 5
    guess_riddles(num_of_attempts)